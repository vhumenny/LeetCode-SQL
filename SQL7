select * from employees;

update employees set salary = 10000 where employee_id = 100;

update employees set salary = salary*2 where employee_id = 100;

update employees set salary = 27000, job_id='IT_PROG' where employee_id = 100;

update employees set salary=8000 where employee_id<105;

update employees set salary=100;

update employees set salary = (select salary from employees where employee_id = 5)
where employee_id = 181;

update employees set employee_id=null where employee_id = 100;

update employees set salary = 5000 where department_id = 
(select department_id from departments where department_name = 'Marketing');

update employees set salary = (select max(salary) from employees), 
hire_date = (select min (start_date) from job_history)
where employee_id=180;

select * from new_emps;

insert into new_emps (select employee_id, first_name, hire_date, job_id 
from employees);

delete from new_emps;

delete from new_emps where emp_id = 210;

delete from new_emps where job like '%CLERK%' or name is NULL;

delete from new_emps where job in 
(select distinct job_id from employees where department_id in
(select department_id from departments where manager_id = 100));

select * from employees;

insert into new_emps
(select employee_id, first_name, hire_date, job_id from employees 
where employee_id<110);

merge into new_emps ne
using employees e
on (ne.emp_id = e.employee_id)
when matched then 
update set ne.start_date= sysdate
delete where ne.job like '%IT%'
when not matched then insert (emp_id, name, start_date,job)
values (employee_id, last_name, hire_date, job_id);
commit;

select * from new_emps;

delete from new_emps where name = 'Tregulov';

commit;
insert into new_emps values (1000, 'Igor', sysdate, 'IT_PROG');
update new_emps set emp_id= 300 where emp_id = 100;
delete from new_emps where emp_id = 101;
commit;
delete from new_emps;

insert into new_emps
(select employee_id, last_name, hire_date, job_id from employees);
commit;
select * from new_emps;
delete from new_emps where name = 'Tregulov';
rollback;
insert into new_emps values (1000, 'Igor', sysdate, 'IT_PROG');
update new_emps set emp_id= 300 where emp_id = 100;
delete from new_emps where emp_id = 101;
commit;
rollback;
insert into new_emps
(select employee_id, first_name, hire_date, job_id from employees 
where employee_id<110);

select * from new_emps;

insert into new_emps values (1000, 'Igor', sysdate, 'IT_PROG');
savepoint s1;
update new_emps set emp_id= 300 where emp_id = 100;
savepoint s2;
delete from new_emps where emp_id = 101;

rollback to savepoint s2;

select* from new_emps for update;

select* from new_emps set emp_id = 1500 where emp_id = 104;

create table locations2 as (select * from locations where 1=2);

insert into locations2 (location_id, street_address, city, country_id)
values (3300, '1314 Sezam', 'Milan', 'IT');
insert into locations2 (location_id, street_address, city, country_id)
values (3400, '1516 Pushkin', 'Turin', 'IT');
delete from locations2 where location_id = 3300;
select * from locations2;
commit;

insert into locations2
values (3500, '1718 De Golle', '12345', initcap ('Paris'), 'Some province 1',
upper ('fr'));
insert into locations2
values (3600, '1920 Jules Verne', '67890', initcap ('lion'), 'Some province 2',
upper ('fr'));
commit;

insert into locations2  
(select * from locations where length (state_province) >9);
commit;

CREATE TABLE locations4europe AS (SELECT * FROM locations WHERE 1=2);

insert all
when 1=1 then
into locations2
values (location_id, street_address, postal_code, 
city, state_province, country_id)
when country_id in
(select country_id from countries where region_id = 1) then
into locations4europe (location_id, street_address, city, country_id)
values (location_id, street_address, city, country_id)
select* from locations;

delete * from locations2;

select *from locations2;

commit;

update locations2 set postal_code = '123456' where postal_code is null;

rollback;

update locations2 set postal_code = 
(select postal_code from locations where location_id = 2600) where postal_code is null;
commit;

delete from locations2 where country_id = 'IT';

savepoint s1;

update locations2 set street_address= 'Sezam st. 18' where location_id>2500;

savepoint s2;
delete from locations2 where street_address= 'Sezam st. 18';
rollback to savepoint s1;

commit;

